# GNU Make workspace makefile autogenerated by Premake

.NOTPARALLEL:

ifndef config
  config=debug_x32
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_x32)
  simplest_config = debug_x32
  welcome_config = debug_x32
  null_config = debug_x32
  enumerate_config = debug_x32
  SoloudStatic_config = debug_x32
  c_test_config = debug_x32
  console_config = debug_x32
  SoloudDynamic_config = debug_x32
  open_config = debug_x32
  glfw_window_api_config = debug_x32
  glfw_ogl_bridge_config = debug_x32
  glx_ogl_bridge_config = debug_x32
  xlib_window_api_config = debug_x32
  opengl_gpu_api_config = debug_x32
  vulkan_api_module_config = debug_x32
  model_module_config = debug_x32
  sandbox_config = debug_x32
  oped_config = debug_x32
  tmp_config = debug_x32
endif
ifeq ($(config),debug_x64)
  simplest_config = debug_x64
  welcome_config = debug_x64
  null_config = debug_x64
  enumerate_config = debug_x64
  SoloudStatic_config = debug_x64
  c_test_config = debug_x64
  console_config = debug_x64
  SoloudDynamic_config = debug_x64
  open_config = debug_x64
  glfw_window_api_config = debug_x64
  glfw_ogl_bridge_config = debug_x64
  glx_ogl_bridge_config = debug_x64
  xlib_window_api_config = debug_x64
  opengl_gpu_api_config = debug_x64
  vulkan_api_module_config = debug_x64
  model_module_config = debug_x64
  sandbox_config = debug_x64
  oped_config = debug_x64
  tmp_config = debug_x64
endif
ifeq ($(config),release_x32)
  simplest_config = release_x32
  welcome_config = release_x32
  null_config = release_x32
  enumerate_config = release_x32
  SoloudStatic_config = release_x32
  c_test_config = release_x32
  console_config = release_x32
  SoloudDynamic_config = release_x32
  open_config = release_x32
  glfw_window_api_config = release_x32
  glfw_ogl_bridge_config = release_x32
  glx_ogl_bridge_config = release_x32
  xlib_window_api_config = release_x32
  opengl_gpu_api_config = release_x32
  vulkan_api_module_config = release_x32
  model_module_config = release_x32
  sandbox_config = release_x32
  oped_config = release_x32
  tmp_config = release_x32
endif
ifeq ($(config),release_x64)
  simplest_config = release_x64
  welcome_config = release_x64
  null_config = release_x64
  enumerate_config = release_x64
  SoloudStatic_config = release_x64
  c_test_config = release_x64
  console_config = release_x64
  SoloudDynamic_config = release_x64
  open_config = release_x64
  glfw_window_api_config = release_x64
  glfw_ogl_bridge_config = release_x64
  glx_ogl_bridge_config = release_x64
  xlib_window_api_config = release_x64
  opengl_gpu_api_config = release_x64
  vulkan_api_module_config = release_x64
  model_module_config = release_x64
  sandbox_config = release_x64
  oped_config = release_x64
  tmp_config = release_x64
endif

PROJECTS := simplest welcome null enumerate SoloudStatic c_test console SoloudDynamic open glfw_window_api glfw_ogl_bridge glx_ogl_bridge xlib_window_api opengl_gpu_api vulkan_api_module model_module sandbox oped tmp

.PHONY: all clean help $(PROJECTS) Engine Frontend Modules Modules/GPU Modules/Misc Modules/Windowing

all: $(PROJECTS)

Engine: open

Frontend: oped sandbox tmp

Modules: Modules/GPU Modules/Misc Modules/Windowing

Modules/GPU: opengl_gpu_api vulkan_api_module

Modules/Misc: model_module

Modules/Windowing: glfw_ogl_bridge glfw_window_api glx_ogl_bridge xlib_window_api

simplest: SoloudStatic
ifneq (,$(simplest_config))
	@echo "==== Building simplest ($(simplest_config)) ===="
	@${MAKE} --no-print-directory -C . -f simplest.make config=$(simplest_config)
endif

welcome: SoloudStatic
ifneq (,$(welcome_config))
	@echo "==== Building welcome ($(welcome_config)) ===="
	@${MAKE} --no-print-directory -C . -f welcome.make config=$(welcome_config)
endif

null: SoloudStatic
ifneq (,$(null_config))
	@echo "==== Building null ($(null_config)) ===="
	@${MAKE} --no-print-directory -C . -f null.make config=$(null_config)
endif

enumerate: SoloudStatic
ifneq (,$(enumerate_config))
	@echo "==== Building enumerate ($(enumerate_config)) ===="
	@${MAKE} --no-print-directory -C . -f enumerate.make config=$(enumerate_config)
endif

SoloudStatic:
ifneq (,$(SoloudStatic_config))
	@echo "==== Building SoloudStatic ($(SoloudStatic_config)) ===="
	@${MAKE} --no-print-directory -C . -f SoloudStatic.make config=$(SoloudStatic_config)
endif

c_test: SoloudStatic
ifneq (,$(c_test_config))
	@echo "==== Building c_test ($(c_test_config)) ===="
	@${MAKE} --no-print-directory -C . -f c_test.make config=$(c_test_config)
endif

console: SoloudStatic
ifneq (,$(console_config))
	@echo "==== Building console ($(console_config)) ===="
	@${MAKE} --no-print-directory -C . -f console.make config=$(console_config)
endif

SoloudDynamic: SoloudStatic
ifneq (,$(SoloudDynamic_config))
	@echo "==== Building SoloudDynamic ($(SoloudDynamic_config)) ===="
	@${MAKE} --no-print-directory -C . -f SoloudDynamic.make config=$(SoloudDynamic_config)
endif

open:
ifneq (,$(open_config))
	@echo "==== Building open ($(open_config)) ===="
	@${MAKE} --no-print-directory -C . -f open.make config=$(open_config)
endif

glfw_window_api: open
ifneq (,$(glfw_window_api_config))
	@echo "==== Building glfw_window_api ($(glfw_window_api_config)) ===="
	@${MAKE} --no-print-directory -C . -f glfw_window_api.make config=$(glfw_window_api_config)
endif

glfw_ogl_bridge: open
ifneq (,$(glfw_ogl_bridge_config))
	@echo "==== Building glfw_ogl_bridge ($(glfw_ogl_bridge_config)) ===="
	@${MAKE} --no-print-directory -C . -f glfw_ogl_bridge.make config=$(glfw_ogl_bridge_config)
endif

glx_ogl_bridge: open
ifneq (,$(glx_ogl_bridge_config))
	@echo "==== Building glx_ogl_bridge ($(glx_ogl_bridge_config)) ===="
	@${MAKE} --no-print-directory -C . -f glx_ogl_bridge.make config=$(glx_ogl_bridge_config)
endif

xlib_window_api: open
ifneq (,$(xlib_window_api_config))
	@echo "==== Building xlib_window_api ($(xlib_window_api_config)) ===="
	@${MAKE} --no-print-directory -C . -f xlib_window_api.make config=$(xlib_window_api_config)
endif

opengl_gpu_api: open
ifneq (,$(opengl_gpu_api_config))
	@echo "==== Building opengl_gpu_api ($(opengl_gpu_api_config)) ===="
	@${MAKE} --no-print-directory -C . -f opengl_gpu_api.make config=$(opengl_gpu_api_config)
endif

vulkan_api_module: open
ifneq (,$(vulkan_api_module_config))
	@echo "==== Building vulkan_api_module ($(vulkan_api_module_config)) ===="
	@${MAKE} --no-print-directory -C . -f vulkan_api_module.make config=$(vulkan_api_module_config)
endif

model_module: open
ifneq (,$(model_module_config))
	@echo "==== Building model_module ($(model_module_config)) ===="
	@${MAKE} --no-print-directory -C . -f model_module.make config=$(model_module_config)
endif

sandbox: open
ifneq (,$(sandbox_config))
	@echo "==== Building sandbox ($(sandbox_config)) ===="
	@${MAKE} --no-print-directory -C . -f sandbox.make config=$(sandbox_config)
endif

oped: open
ifneq (,$(oped_config))
	@echo "==== Building oped ($(oped_config)) ===="
	@${MAKE} --no-print-directory -C . -f oped.make config=$(oped_config)
endif

tmp:
ifneq (,$(tmp_config))
	@echo "==== Building tmp ($(tmp_config)) ===="
	@${MAKE} --no-print-directory -C . -f tmp.make config=$(tmp_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f simplest.make clean
	@${MAKE} --no-print-directory -C . -f welcome.make clean
	@${MAKE} --no-print-directory -C . -f null.make clean
	@${MAKE} --no-print-directory -C . -f enumerate.make clean
	@${MAKE} --no-print-directory -C . -f SoloudStatic.make clean
	@${MAKE} --no-print-directory -C . -f c_test.make clean
	@${MAKE} --no-print-directory -C . -f console.make clean
	@${MAKE} --no-print-directory -C . -f SoloudDynamic.make clean
	@${MAKE} --no-print-directory -C . -f open.make clean
	@${MAKE} --no-print-directory -C . -f glfw_window_api.make clean
	@${MAKE} --no-print-directory -C . -f glfw_ogl_bridge.make clean
	@${MAKE} --no-print-directory -C . -f glx_ogl_bridge.make clean
	@${MAKE} --no-print-directory -C . -f xlib_window_api.make clean
	@${MAKE} --no-print-directory -C . -f opengl_gpu_api.make clean
	@${MAKE} --no-print-directory -C . -f vulkan_api_module.make clean
	@${MAKE} --no-print-directory -C . -f model_module.make clean
	@${MAKE} --no-print-directory -C . -f sandbox.make clean
	@${MAKE} --no-print-directory -C . -f oped.make clean
	@${MAKE} --no-print-directory -C . -f tmp.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_x32"
	@echo "  debug_x64"
	@echo "  release_x32"
	@echo "  release_x64"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   simplest"
	@echo "   welcome"
	@echo "   null"
	@echo "   enumerate"
	@echo "   SoloudStatic"
	@echo "   c_test"
	@echo "   console"
	@echo "   SoloudDynamic"
	@echo "   open"
	@echo "   glfw_window_api"
	@echo "   glfw_ogl_bridge"
	@echo "   glx_ogl_bridge"
	@echo "   xlib_window_api"
	@echo "   opengl_gpu_api"
	@echo "   vulkan_api_module"
	@echo "   model_module"
	@echo "   sandbox"
	@echo "   oped"
	@echo "   tmp"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"