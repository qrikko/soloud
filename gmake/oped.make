# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_x32
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

ifeq ($(config),debug_x32)
  RESCOMP = windres
  TARGETDIR = ../../../../bin/Debug-linux-x86_64
  TARGET = $(TARGETDIR)/oped_x86_d
  OBJDIR = ../../../../bin-int/Debug-linux-x86_64/x32/Debug/oped
  DEFINES += -DLD_PATH=\"/home/qrikko/Documents/development/open.git/plugins/Debug-linux-x86_64//Debug-linux-x86_64\" -DDEBUG
  INCLUDES += -I../../../core/src -I../.. -I../../cglm/include -I../../log.c/src -I../../vulkan-headers/include -I../../dmt/src
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=gnu99 -msse4.1 -fPIC -O0 -g -fno-exceptions
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -fno-exceptions -fno-rtti -msse4.1 -fPIC -O0 -g -fno-exceptions
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../../../../lib/Debug-linux-x86_64/libopen_x86_d.a -lvulkan -lm -ldl -lX11
  LDDEPS += ../../../../lib/Debug-linux-x86_64/libopen_x86_d.a
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -L../../../../bin/Debug-linux-x86_64 -Wl,-rpath=/home/qrikko/Documents/development/open.git/plugins/Debug-linux-x86_64/ -fPIC -O0
  LINKCMD = $(CC) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),debug_x64)
  RESCOMP = windres
  TARGETDIR = ../../../../bin/Debug-linux-x86_64
  TARGET = $(TARGETDIR)/oped_x64_d
  OBJDIR = ../../../../bin-int/Debug-linux-x86_64/x64/Debug/oped
  DEFINES += -DLD_PATH=\"/home/qrikko/Documents/development/open.git/plugins/Debug-linux-x86_64//Debug-linux-x86_64\" -DDEBUG
  INCLUDES += -I../../../core/src -I../.. -I../../cglm/include -I../../log.c/src -I../../vulkan-headers/include -I../../dmt/src
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=gnu99 -msse4.1 -fPIC -O0 -g -fno-exceptions
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -fno-exceptions -fno-rtti -msse4.1 -fPIC -O0 -g -fno-exceptions
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../../../../lib/Debug-linux-x86_64/libopen_x64_d.a -lvulkan -lm -ldl -lX11
  LDDEPS += ../../../../lib/Debug-linux-x86_64/libopen_x64_d.a
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -L../../../../bin/Debug-linux-x86_64 -Wl,-rpath=/home/qrikko/Documents/development/open.git/plugins/Debug-linux-x86_64/ -fPIC -O0
  LINKCMD = $(CC) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release_x32)
  RESCOMP = windres
  TARGETDIR = ../../../../bin/Release-linux-x86_64
  TARGET = $(TARGETDIR)/oped_x86
  OBJDIR = ../../../../bin-int/Release-linux-x86_64/x32/Release/oped
  DEFINES += -DNDEBUG -DLD_PATH=\"/home/qrikko/Documents/development/open.git/plugins/Release-linux-x86_64//Release-linux-x86_64\" -DRELEASE
  INCLUDES += -I../../../core/src -I../.. -I../../cglm/include -I../../log.c/src -I../../vulkan-headers/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -msse2 -std=gnu99 -msse4.1 -fPIC -O0 -g -fno-exceptions
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -msse2 -fno-exceptions -fno-rtti -msse4.1 -fPIC -O0 -g -fno-exceptions
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../../../../lib/Release-linux-x86_64/libopen_x86.a -lvulkan -lm -ldl -lX11
  LDDEPS += ../../../../lib/Release-linux-x86_64/libopen_x86.a
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s -L../../../../bin/Release-linux-x86_64 -Wl,-rpath=/home/qrikko/Documents/development/open.git/plugins/Release-linux-x86_64/ -fPIC -O0
  LINKCMD = $(CC) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release_x64)
  RESCOMP = windres
  TARGETDIR = ../../../../bin/Release-linux-x86_64
  TARGET = $(TARGETDIR)/oped_x64
  OBJDIR = ../../../../bin-int/Release-linux-x86_64/x64/Release/oped
  DEFINES += -DNDEBUG -DLD_PATH=\"/home/qrikko/Documents/development/open.git/plugins/Release-linux-x86_64//Release-linux-x86_64\" -DRELEASE
  INCLUDES += -I../../../core/src -I../.. -I../../cglm/include -I../../log.c/src -I../../vulkan-headers/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=gnu99 -msse4.1 -fPIC -O0 -g -fno-exceptions
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fno-exceptions -fno-rtti -msse4.1 -fPIC -O0 -g -fno-exceptions
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../../../../lib/Release-linux-x86_64/libopen_x64.a -lvulkan -lm -ldl -lX11
  LDDEPS += ../../../../lib/Release-linux-x86_64/libopen_x64.a
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s -L../../../../bin/Release-linux-x86_64 -Wl,-rpath=/home/qrikko/Documents/development/open.git/plugins/Release-linux-x86_64/ -fPIC -O0
  LINKCMD = $(CC) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

OBJECTS := \
	$(OBJDIR)/oped.o \

RESOURCES := \

CUSTOMFILES := \

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

$(TARGET): $(GCH) ${CUSTOMFILES} $(OBJECTS) $(LDDEPS) $(RESOURCES) | $(TARGETDIR)
	@echo Linking oped
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(CUSTOMFILES): | $(OBJDIR)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning oped
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH) | $(OBJDIR)
$(GCH): $(PCH) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CC) -x c-header $(ALL_CFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
else
$(OBJECTS): | $(OBJDIR)
endif

$(OBJDIR)/oped.o: ../../../frontend/oped/oped.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
endif